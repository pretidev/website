{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/mac/Documents/Projects/pretidev-site/src/components/Wave.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef, useState } from \"react\";\nimport { useWindowSizes } from \"../hooks/useWindowSizes\";\nimport { useTheme } from \"styled-components\";\nimport { drawWave } from \"../services/drawWave\";\nimport { useAnimationFrame } from \"../hooks/useAnimationFrame\";\nexport var Wave = function Wave(_ref) {\n  _s();\n\n  var _ref$amplitude = _ref.amplitude,\n      amplitude = _ref$amplitude === void 0 ? 120 : _ref$amplitude,\n      _ref$length = _ref.length,\n      length = _ref$length === void 0 ? 0.005 : _ref$length,\n      _ref$accelerate = _ref.accelerate,\n      accelerate = _ref$accelerate === void 0 ? false : _ref$accelerate,\n      _ref$animate = _ref.animate,\n      animate = _ref$animate === void 0 ? true : _ref$animate;\n  var theme = useTheme();\n  var canvasRef = useRef(null);\n\n  var _useWindowSizes = useWindowSizes(),\n      width = _useWindowSizes.width,\n      height = _useWindowSizes.height;\n\n  var _useState = useState(100),\n      lasIncrement = _useState[0],\n      setLastIncrement = _useState[1];\n\n  var increment = lasIncrement;\n  useAnimationFrame(function () {\n    var canvas = canvasRef.current;\n\n    if (height && width && canvas) {\n      var ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext(\"2d\");\n      canvas.height = height;\n      canvas.width = width;\n\n      var draw = function draw() {\n        ctx.clearRect(0, 0, width, height);\n        drawWave(ctx, width, height, length, accelerate ? 170 : amplitude, increment / (accelerate ? 10 : 100), theme.colors.home.wave);\n        if (animate) increment++;\n        setLastIncrement(increment);\n      };\n\n      draw();\n    }\n  }, [width, height, accelerate]);\n  return __jsx(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      position: \"absolute\",\n      zIndex: -1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 10\n    }\n  });\n};\n\n_s(Wave, \"ULXqbFU0uy2hMW6tVwxG/F3baUQ=\", false, function () {\n  return [useTheme, useWindowSizes, useAnimationFrame];\n});\n\n_c = Wave;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wave\");","map":{"version":3,"sources":["/Users/mac/Documents/Projects/pretidev-site/src/components/Wave.tsx"],"names":["React","useRef","useState","useWindowSizes","useTheme","drawWave","useAnimationFrame","Wave","amplitude","length","accelerate","animate","theme","canvasRef","width","height","lasIncrement","setLastIncrement","increment","canvas","current","ctx","getContext","draw","clearRect","colors","home","wave","position","zIndex"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAA4C,OAA5C;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AAGA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AASA,OAAO,IAAMC,IAAmB,GAAG,SAAtBA,IAAsB,OAK7B;AAAA;;AAAA,4BAJJC,SAII;AAAA,MAJJA,SAII,+BAJQ,GAIR;AAAA,yBAHJC,MAGI;AAAA,MAHJA,MAGI,4BAHK,KAGL;AAAA,6BAFJC,UAEI;AAAA,MAFJA,UAEI,gCAFS,KAET;AAAA,0BADJC,OACI;AAAA,MADJA,OACI,6BADM,IACN;AACJ,MAAMC,KAAK,GAAGR,QAAQ,EAAtB;AACA,MAAMS,SAAS,GAAGZ,MAAM,CAA2B,IAA3B,CAAxB;;AAFI,wBAIsBE,cAAc,EAJpC;AAAA,MAIIW,KAJJ,mBAIIA,KAJJ;AAAA,MAIWC,MAJX,mBAIWA,MAJX;;AAAA,kBAMqCb,QAAQ,CAAC,GAAD,CAN7C;AAAA,MAMGc,YANH;AAAA,MAMiBC,gBANjB;;AAQJ,MAAIC,SAAS,GAAGF,YAAhB;AAEAV,EAAAA,iBAAiB,CAAC,YAAM;AACtB,QAAMa,MAAM,GAAGN,SAAS,CAACO,OAAzB;;AAEA,QAAIL,MAAM,IAAID,KAAV,IAAmBK,MAAvB,EAA+B;AAC7B,UAAME,GAAG,GAAGF,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEG,UAAR,CAAmB,IAAnB,CAAZ;AAEAH,MAAAA,MAAM,CAACJ,MAAP,GAAgBA,MAAhB;AACAI,MAAAA,MAAM,CAACL,KAAP,GAAeA,KAAf;;AAEA,UAAMS,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBF,QAAAA,GAAG,CAACG,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBV,KAApB,EAA2BC,MAA3B;AAEAV,QAAAA,QAAQ,CACNgB,GADM,EAENP,KAFM,EAGNC,MAHM,EAINN,MAJM,EAKNC,UAAU,GAAG,GAAH,GAASF,SALb,EAMNU,SAAS,IAAIR,UAAU,GAAG,EAAH,GAAQ,GAAtB,CANH,EAONE,KAAK,CAACa,MAAN,CAAaC,IAAb,CAAkBC,IAPZ,CAAR;AAUA,YAAIhB,OAAJ,EAAaO,SAAS;AAEtBD,QAAAA,gBAAgB,CAACC,SAAD,CAAhB;AACD,OAhBD;;AAkBAK,MAAAA,IAAI;AACL;AACF,GA7BgB,EA6Bd,CAACT,KAAD,EAAQC,MAAR,EAAgBL,UAAhB,CA7Bc,CAAjB;AA+BA,SAAO;AAAQ,IAAA,GAAG,EAAEG,SAAb;AAAwB,IAAA,KAAK,EAAE;AAAEe,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,MAAM,EAAE,CAAC;AAAjC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA/CM;;GAAMtB,I;UAMGH,Q,EAGYD,c,EAM1BG,iB;;;KAfWC,I","sourcesContent":["import React, { useRef, useState, FC } from \"react\"\nimport { useWindowSizes } from \"../hooks/useWindowSizes\"\nimport { useTheme } from \"styled-components\"\n\nimport { AppTheme } from \"../types\"\nimport { drawWave } from \"../services/drawWave\"\nimport { useAnimationFrame } from \"../hooks/useAnimationFrame\"\n\ninterface WaveProps {\n  accelerate?: boolean\n  amplitude?: number\n  length?: number\n  animate?: boolean\n}\n\nexport const Wave: FC<WaveProps> = ({\n  amplitude = 120,\n  length = 0.005,\n  accelerate = false,\n  animate = true,\n}) => {\n  const theme = useTheme() as AppTheme\n  const canvasRef = useRef<HTMLCanvasElement | null>(null)\n\n  const { width, height } = useWindowSizes()\n\n  const [lasIncrement, setLastIncrement] = useState(100)\n\n  let increment = lasIncrement\n\n  useAnimationFrame(() => {\n    const canvas = canvasRef.current\n\n    if (height && width && canvas) {\n      const ctx = canvas?.getContext(\"2d\") as CanvasRenderingContext2D\n\n      canvas.height = height\n      canvas.width = width\n\n      const draw = () => {\n        ctx.clearRect(0, 0, width, height)\n\n        drawWave(\n          ctx,\n          width,\n          height,\n          length,\n          accelerate ? 170 : amplitude,\n          increment / (accelerate ? 10 : 100),\n          theme.colors.home.wave\n        )\n\n        if (animate) increment++\n\n        setLastIncrement(increment)\n      }\n\n      draw()\n    }\n  }, [width, height, accelerate])\n\n  return <canvas ref={canvasRef} style={{ position: \"absolute\", zIndex: -1 }} />\n}\n"]},"metadata":{},"sourceType":"module"}