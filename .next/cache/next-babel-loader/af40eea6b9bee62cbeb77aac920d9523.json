{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/Projects/pretidev-site/src/components/Seo.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Head } from \"next/document\";\nexport const Seo = ({\n  description,\n  title,\n  lang = \"fr\",\n  meta = []\n}) => {\n  const baseMeta = [{\n    name: `description`,\n    content: metaDescription\n  }, {\n    property: `og:title`,\n    content: title\n  }, {\n    property: `og:description`,\n    content: metaDescription\n  }, {\n    property: `og:type`,\n    content: `website`\n  }, {\n    name: `twitter:card`,\n    content: `summary`\n  }, {\n    name: `twitter:title`,\n    content: title\n  }, {\n    name: `twitter:description`,\n    content: metaDescription\n  }];\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, title), __jsx(\"meta\", {\n    name: \"description\",\n    content: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), meta.map(m => __jsx(\"meta\", {\n    key: m.name,\n    name: m.name,\n    content: m.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/mac/Documents/Projects/pretidev-site/src/components/Seo.tsx"],"names":["React","Head","Seo","description","title","lang","meta","baseMeta","name","content","metaDescription","property","map","m"],"mappings":";;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,IAAT,QAAqB,eAArB;AAuBA,OAAO,MAAMC,GAAiB,GAAG,CAAC;AAChCC,EAAAA,WADgC;AAEhCC,EAAAA,KAFgC;AAGhCC,EAAAA,IAAI,GAAG,IAHyB;AAIhCC,EAAAA,IAAI,GAAG;AAJyB,CAAD,KAK3B;AACJ,QAAMC,QAAgB,GAAG,CACvB;AACEC,IAAAA,IAAI,EAAG,aADT;AAEEC,IAAAA,OAAO,EAAEC;AAFX,GADuB,EAKvB;AACEC,IAAAA,QAAQ,EAAG,UADb;AAEEF,IAAAA,OAAO,EAAEL;AAFX,GALuB,EASvB;AACEO,IAAAA,QAAQ,EAAG,gBADb;AAEEF,IAAAA,OAAO,EAAEC;AAFX,GATuB,EAavB;AACEC,IAAAA,QAAQ,EAAG,SADb;AAEEF,IAAAA,OAAO,EAAG;AAFZ,GAbuB,EAiBvB;AACED,IAAAA,IAAI,EAAG,cADT;AAEEC,IAAAA,OAAO,EAAG;AAFZ,GAjBuB,EAqBvB;AACED,IAAAA,IAAI,EAAG,eADT;AAEEC,IAAAA,OAAO,EAAEL;AAFX,GArBuB,EAyBvB;AACEI,IAAAA,IAAI,EAAG,qBADT;AAEEC,IAAAA,OAAO,EAAEC;AAFX,GAzBuB,CAAzB;AA+BA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQN,KAAR,CADF,EAEE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAED,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIGG,IAAI,CAACM,GAAL,CAASC,CAAC,IACT;AAAM,IAAA,GAAG,EAAEA,CAAC,CAACL,IAAb;AAAmB,IAAA,IAAI,EAAEK,CAAC,CAACL,IAA3B;AAAiC,IAAA,OAAO,EAAEK,CAAC,CAACJ,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAJH,CADF,CADF;AAYD,CAjDM","sourcesContent":["import React, { FC } from \"react\"\nimport { Head } from \"next/document\"\n\ninterface Property {\n  property: string\n  content: string\n}\ninterface MetaName {\n  name: string\n  content: string\n}\n\ninterface Meta {\n  name?: string\n  content: string\n}\n\nexport interface SeoProps {\n  title: string\n  description: string\n  lang?: \"fr\" | \"en\"\n  meta?: Meta[]\n}\n\nexport const Seo: FC<SeoProps> = ({\n  description,\n  title,\n  lang = \"fr\",\n  meta = [],\n}) => {\n  const baseMeta: Meta[] = [\n    {\n      name: `description`,\n      content: metaDescription,\n    },\n    {\n      property: `og:title`,\n      content: title,\n    },\n    {\n      property: `og:description`,\n      content: metaDescription,\n    },\n    {\n      property: `og:type`,\n      content: `website`,\n    },\n    {\n      name: `twitter:card`,\n      content: `summary`,\n    },\n    {\n      name: `twitter:title`,\n      content: title,\n    },\n    {\n      name: `twitter:description`,\n      content: metaDescription,\n    },\n  ]\n\n  return (\n    <>\n      <Head>\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n\n        {meta.map(m => (\n          <meta key={m.name} name={m.name} content={m.content} />\n        ))}\n      </Head>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}