{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/mac/Documents/Projects/pretidev-site/src/components/Seo.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Head } from \"next/document\";\nexport var Seo = function Seo(_ref) {\n  var description = _ref.description,\n      title = _ref.title,\n      _ref$lang = _ref.lang,\n      lang = _ref$lang === void 0 ? \"fr\" : _ref$lang,\n      _ref$meta = _ref.meta,\n      meta = _ref$meta === void 0 ? [] : _ref$meta;\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, title), __jsx(\"meta\", {\n    name: \"description\",\n    content: description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }), \"$\", meta.map(function (m) {\n    ;\n\n    __jsx(\"meta\", {\n      name: m.name,\n      content: m.content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    });\n  })), __jsx(Head, {\n    htmlAttributes: {\n      lang: lang\n    },\n    title: title,\n    titleTemplate: \"%s | \".concat(title),\n    meta: [{\n      name: \"description\",\n      content: metaDescription\n    }, {\n      property: \"og:title\",\n      content: title\n    }, {\n      property: \"og:description\",\n      content: metaDescription\n    }, {\n      property: \"og:type\",\n      content: \"website\"\n    }, {\n      name: \"twitter:card\",\n      content: \"summary\"\n    }, {\n      name: \"twitter:title\",\n      content: title\n    }, {\n      name: \"twitter:description\",\n      content: metaDescription\n    }].concat(meta),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }));\n};\n_c = Seo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Seo\");","map":{"version":3,"sources":["/Users/mac/Documents/Projects/pretidev-site/src/components/Seo.tsx"],"names":["React","Head","Seo","description","title","lang","meta","map","m","name","content","metaDescription","property","concat"],"mappings":";;;;AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,SAASC,IAAT,QAAqB,eAArB;AAcA,OAAO,IAAMC,GAAiB,GAAG,SAApBA,GAAoB,OAK3B;AAAA,MAJJC,WAII,QAJJA,WAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,uBAFJC,IAEI;AAAA,MAFJA,IAEI,0BAFG,IAEH;AAAA,uBADJC,IACI;AAAA,MADJA,IACI,0BADG,EACH;AACJ,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQF,KAAR,CADF,EAEE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAED,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,OAGGG,IAAI,CAACC,GAAL,CAAS,UAAAC,CAAC,EAAI;AACb;;AAAC;AAAM,MAAA,IAAI,EAAEA,CAAC,CAACC,IAAd;AAAoB,MAAA,OAAO,EAAED,CAAC,CAACE,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACF,GAFA,CAHH,CADF,EAQE,MAAC,IAAD;AACE,IAAA,cAAc,EAAE;AACdL,MAAAA,IAAI,EAAJA;AADc,KADlB;AAIE,IAAA,KAAK,EAAED,KAJT;AAKE,IAAA,aAAa,iBAAUA,KAAV,CALf;AAME,IAAA,IAAI,EAAE,CACJ;AACEK,MAAAA,IAAI,eADN;AAEEC,MAAAA,OAAO,EAAEC;AAFX,KADI,EAKJ;AACEC,MAAAA,QAAQ,YADV;AAEEF,MAAAA,OAAO,EAAEN;AAFX,KALI,EASJ;AACEQ,MAAAA,QAAQ,kBADV;AAEEF,MAAAA,OAAO,EAAEC;AAFX,KATI,EAaJ;AACEC,MAAAA,QAAQ,WADV;AAEEF,MAAAA,OAAO;AAFT,KAbI,EAiBJ;AACED,MAAAA,IAAI,gBADN;AAEEC,MAAAA,OAAO;AAFT,KAjBI,EAqBJ;AACED,MAAAA,IAAI,iBADN;AAEEC,MAAAA,OAAO,EAAEN;AAFX,KArBI,EAyBJ;AACEK,MAAAA,IAAI,uBADN;AAEEC,MAAAA,OAAO,EAAEC;AAFX,KAzBI,EA6BJE,MA7BI,CA6BGP,IA7BH,CANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAgDD,CAtDM;KAAMJ,G","sourcesContent":["import React, { FC } from \"react\"\nimport { Head } from \"next/document\"\n\ninterface Meta {\n  name: string\n  content: string\n}\n\nexport interface SeoProps {\n  title: string\n  description: string\n  lang?: \"fr\" | \"en\"\n  meta?: Meta[]\n}\n\nexport const Seo: FC<SeoProps> = ({\n  description,\n  title,\n  lang = \"fr\",\n  meta = [],\n}) => {\n  return (\n    <>\n      <Head>\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />$\n        {meta.map(m => {\n          ;<meta name={m.name} content={m.content} />\n        })}\n      </Head>\n      <Head\n        htmlAttributes={{\n          lang,\n        }}\n        title={title}\n        titleTemplate={`%s | ${title}`}\n        meta={[\n          {\n            name: `description`,\n            content: metaDescription,\n          },\n          {\n            property: `og:title`,\n            content: title,\n          },\n          {\n            property: `og:description`,\n            content: metaDescription,\n          },\n          {\n            property: `og:type`,\n            content: `website`,\n          },\n          {\n            name: `twitter:card`,\n            content: `summary`,\n          },\n          {\n            name: `twitter:title`,\n            content: title,\n          },\n          {\n            name: `twitter:description`,\n            content: metaDescription,\n          },\n        ].concat(meta)}\n      />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}