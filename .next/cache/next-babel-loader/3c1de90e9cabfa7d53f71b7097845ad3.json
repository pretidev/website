{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useMemo } from \"react\";\nexport const Seo = ({\n  description,\n  title,\n  metas: meta = []\n}) => {\n  const baseMetas = useMemo(() => [{\n    name: `description`,\n    content: description\n  }, {\n    property: `og:title`,\n    content: title\n  }, {\n    property: `og:description`,\n    content: description\n  }, {\n    property: `og:type`,\n    content: `website`\n  }, {\n    name: `twitter:card`,\n    content: `summary`\n  }, {\n    name: `twitter:title`,\n    content: title\n  }, {\n    name: `twitter:description`,\n    content: description\n  }], []);\n  return __jsx(React.Fragment, null);\n};","map":{"version":3,"sources":["/Users/mac/Documents/Projects/pretidev-site/src/components/Seo.tsx"],"names":["React","useMemo","Seo","description","title","metas","meta","baseMetas","name","content","property"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,OAApB,QAAmC,OAAnC;AAqBA,OAAO,MAAMC,GAAiB,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA,KAAK,EAAEC,IAAI,GAAG;AAApC,CAAD,KAA8C;AAC7E,QAAMC,SAAiB,GAAGN,OAAO,CAC/B,MAAM,CACJ;AACEO,IAAAA,IAAI,EAAG,aADT;AAEEC,IAAAA,OAAO,EAAEN;AAFX,GADI,EAKJ;AACEO,IAAAA,QAAQ,EAAG,UADb;AAEED,IAAAA,OAAO,EAAEL;AAFX,GALI,EASJ;AACEM,IAAAA,QAAQ,EAAG,gBADb;AAEED,IAAAA,OAAO,EAAEN;AAFX,GATI,EAaJ;AACEO,IAAAA,QAAQ,EAAG,SADb;AAEED,IAAAA,OAAO,EAAG;AAFZ,GAbI,EAiBJ;AACED,IAAAA,IAAI,EAAG,cADT;AAEEC,IAAAA,OAAO,EAAG;AAFZ,GAjBI,EAqBJ;AACED,IAAAA,IAAI,EAAG,eADT;AAEEC,IAAAA,OAAO,EAAEL;AAFX,GArBI,EAyBJ;AACEI,IAAAA,IAAI,EAAG,qBADT;AAEEC,IAAAA,OAAO,EAAEN;AAFX,GAzBI,CADyB,EA+B/B,EA/B+B,CAAjC;AAkCA,SACE,2BADF;AAYD,CA/CM","sourcesContent":["import React, { FC, useMemo } from \"react\"\nimport { Head } from \"next/document\"\n\ninterface MetaProperty {\n  property: string\n  content: string\n}\n\ninterface MetaName {\n  name: string\n  content: string\n}\n\ntype Meta = MetaName | MetaProperty\n\nexport interface SeoProps {\n  title: string\n  description: string\n  metas?: Meta[]\n}\n\nexport const Seo: FC<SeoProps> = ({ description, title, metas: meta = [] }) => {\n  const baseMetas: Meta[] = useMemo(\n    () => [\n      {\n        name: `description`,\n        content: description,\n      },\n      {\n        property: `og:title`,\n        content: title,\n      },\n      {\n        property: `og:description`,\n        content: description,\n      },\n      {\n        property: `og:type`,\n        content: `website`,\n      },\n      {\n        name: `twitter:card`,\n        content: `summary`,\n      },\n      {\n        name: `twitter:title`,\n        content: title,\n      },\n      {\n        name: `twitter:description`,\n        content: description,\n      },\n    ],\n    []\n  )\n\n  return (\n    <>\n      {/* <Head>\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n\n        {[...baseMetas, ...meta].map((meta, i: number) => (\n          <meta key={i} {...meta} />\n        ))}\n      </Head> */}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}