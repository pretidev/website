{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Documents/Projects/pretidev-site/src/components/Seo.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useMemo } from \"react\";\nimport Head from \"next/head\";\nexport var Seo = function Seo(_ref) {\n  _s();\n\n  var description = _ref.description,\n      title = _ref.title,\n      _ref$metas = _ref.metas,\n      meta = _ref$metas === void 0 ? [] : _ref$metas;\n  var baseMetas = useMemo(function () {\n    return [{\n      name: \"description\",\n      content: description\n    }, {\n      property: \"og:title\",\n      content: title\n    }, {\n      property: \"og:description\",\n      content: description\n    }, {\n      property: \"og:type\",\n      content: \"website\"\n    }, {\n      name: \"twitter:card\",\n      content: \"summary\"\n    }, {\n      name: \"twitter:title\",\n      content: title\n    }, {\n      name: \"twitter:description\",\n      content: description\n    }, {\n      name: \"viewport\",\n      content: \"initial-scale=1.0, width=device-width\"\n    }];\n  }, []);\n  return __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, title), __jsx(\"meta\", {\n    name: \"description\",\n    content: description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), [].concat(_toConsumableArray(baseMetas), _toConsumableArray(meta)).map(function (meta, i) {\n    return __jsx(\"meta\", _extends({\n      key: i\n    }, meta, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }));\n  }));\n};\n\n_s(Seo, \"H0bZt9H3fl52Uuqs2hYtFwmUgw8=\");\n\n_c = Seo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Seo\");","map":{"version":3,"sources":["/Users/mac/Documents/Projects/pretidev-site/src/components/Seo.tsx"],"names":["React","useMemo","Head","Seo","description","title","metas","meta","baseMetas","name","content","property","map","i"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAoBC,OAApB,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAoBA,OAAO,IAAMC,GAAiB,GAAG,SAApBA,GAAoB,OAA8C;AAAA;;AAAA,MAA3CC,WAA2C,QAA3CA,WAA2C;AAAA,MAA9BC,KAA8B,QAA9BA,KAA8B;AAAA,wBAAvBC,KAAuB;AAAA,MAAhBC,IAAgB,2BAAT,EAAS;AAC7E,MAAMC,SAAiB,GAAGP,OAAO,CAC/B;AAAA,WAAM,CACJ;AACEQ,MAAAA,IAAI,eADN;AAEEC,MAAAA,OAAO,EAAEN;AAFX,KADI,EAKJ;AACEO,MAAAA,QAAQ,YADV;AAEED,MAAAA,OAAO,EAAEL;AAFX,KALI,EASJ;AACEM,MAAAA,QAAQ,kBADV;AAEED,MAAAA,OAAO,EAAEN;AAFX,KATI,EAaJ;AACEO,MAAAA,QAAQ,WADV;AAEED,MAAAA,OAAO;AAFT,KAbI,EAiBJ;AACED,MAAAA,IAAI,gBADN;AAEEC,MAAAA,OAAO;AAFT,KAjBI,EAqBJ;AACED,MAAAA,IAAI,iBADN;AAEEC,MAAAA,OAAO,EAAEL;AAFX,KArBI,EAyBJ;AACEI,MAAAA,IAAI,uBADN;AAEEC,MAAAA,OAAO,EAAEN;AAFX,KAzBI,EA6BJ;AACEK,MAAAA,IAAI,EAAE,UADR;AAEEC,MAAAA,OAAO,EAAE;AAFX,KA7BI,CAAN;AAAA,GAD+B,EAmC/B,EAnC+B,CAAjC;AAsCA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQL,KAAR,CADF,EAEE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAED,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIG,6BAAII,SAAJ,sBAAkBD,IAAlB,GAAwBK,GAAxB,CAA4B,UAACL,IAAD,EAAOM,CAAP;AAAA,WAC3B;AAAM,MAAA,GAAG,EAAEA;AAAX,OAAkBN,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAD2B;AAAA,GAA5B,CAJH,CADF;AAUD,CAjDM;;GAAMJ,G;;KAAAA,G","sourcesContent":["import React, { FC, useMemo } from \"react\"\nimport Head from \"next/head\"\n\ninterface MetaProperty {\n  property: string\n  content: string\n}\n\ninterface MetaName {\n  name: string\n  content: string\n}\n\ntype Meta = MetaName | MetaProperty\n\nexport interface SeoProps {\n  title: string\n  description: string\n  metas?: Meta[]\n}\n\nexport const Seo: FC<SeoProps> = ({ description, title, metas: meta = [] }) => {\n  const baseMetas: Meta[] = useMemo(\n    () => [\n      {\n        name: `description`,\n        content: description,\n      },\n      {\n        property: `og:title`,\n        content: title,\n      },\n      {\n        property: `og:description`,\n        content: description,\n      },\n      {\n        property: `og:type`,\n        content: `website`,\n      },\n      {\n        name: `twitter:card`,\n        content: `summary`,\n      },\n      {\n        name: `twitter:title`,\n        content: title,\n      },\n      {\n        name: `twitter:description`,\n        content: description,\n      },\n      {\n        name: \"viewport\",\n        content: \"initial-scale=1.0, width=device-width\",\n      },\n    ],\n    []\n  )\n\n  return (\n    <Head>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n\n      {[...baseMetas, ...meta].map((meta, i: number) => (\n        <meta key={i} {...meta} />\n      ))}\n    </Head>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}