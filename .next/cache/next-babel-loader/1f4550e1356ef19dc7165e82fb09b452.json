{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRef, useEffect } from \"react\";\nexport var useAnimationFrame = function useAnimationFrame(callback, deps) {\n  _s();\n\n  var requestRef = useRef();\n  var previousTimeRef = useRef();\n\n  var animate = function animate(time) {\n    if (previousTimeRef.current != undefined) {\n      var _deltaTime = time - (previousTimeRef === null || previousTimeRef === void 0 ? void 0 : previousTimeRef.current);\n\n      callback(_deltaTime);\n    }\n\n    previousTimeRef.current = time;\n    requestRef.current = requestAnimationFrame(animate);\n  };\n\n  useEffect(function () {\n    requestRef.current = requestAnimationFrame(animate);\n    return function () {\n      if (requestRef.current) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, deps);\n};\n\n_s(useAnimationFrame, \"z8M7fn6QAiYOb97lWpO8m/pmXa0=\");","map":{"version":3,"sources":["/Users/mac/Documents/Projects/pretidev-site/src/hooks/useAnimationFrame.ts"],"names":["useRef","useEffect","useAnimationFrame","callback","deps","requestRef","previousTimeRef","animate","time","current","undefined","deltaTime","requestAnimationFrame","cancelAnimationFrame"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkD,OAAlD;AAIA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAC/BC,QAD+B,EAE/BC,IAF+B,EAGtB;AAAA;;AACT,MAAMC,UAAU,GAAGL,MAAM,EAAzB;AACA,MAAMM,eAAe,GAAGN,MAAM,EAA9B;;AAEA,MAAMO,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAkB;AAChC,QAAIF,eAAe,CAACG,OAAhB,IAA2BC,SAA/B,EAA0C;AACxC,UAAMC,UAAS,GAAGH,IAAI,IAAGF,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAEG,OAApB,CAAtB;;AAEAN,MAAAA,QAAQ,CAACQ,UAAD,CAAR;AACD;;AAEDL,IAAAA,eAAe,CAACG,OAAhB,GAA0BD,IAA1B;AACAH,IAAAA,UAAU,CAACI,OAAX,GAAqBG,qBAAqB,CAACL,OAAD,CAA1C;AACD,GATD;;AAWAN,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,UAAU,CAACI,OAAX,GAAqBG,qBAAqB,CAACL,OAAD,CAA1C;AAEA,WAAO,YAAM;AACX,UAAIF,UAAU,CAACI,OAAf,EAAwB;AACtBI,QAAAA,oBAAoB,CAACR,UAAU,CAACI,OAAZ,CAApB;AACD;AACF,KAJD;AAKD,GARQ,EAQNL,IARM,CAAT;AASD,CA3BM;;GAAMF,iB","sourcesContent":["import { useRef, useEffect, DependencyList } from \"react\"\n\nexport type AnimationFrameCallback = (deltaTime: number) => any\n\nexport const useAnimationFrame = (\n  callback: AnimationFrameCallback,\n  deps?: DependencyList | undefined\n): void => {\n  const requestRef = useRef<number | undefined>()\n  const previousTimeRef = useRef<number | undefined>()\n\n  const animate = (time: number) => {\n    if (previousTimeRef.current != undefined) {\n      const deltaTime = time - previousTimeRef?.current\n\n      callback(deltaTime)\n    }\n\n    previousTimeRef.current = time\n    requestRef.current = requestAnimationFrame(animate)\n  }\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate)\n\n    return () => {\n      if (requestRef.current) {\n        cancelAnimationFrame(requestRef.current)\n      }\n    }\n  }, deps)\n}\n"]},"metadata":{},"sourceType":"module"}